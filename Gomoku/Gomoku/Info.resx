<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="RichTBDatasInfo.Text" xml:space="preserve">
    <value>1 Для авторизации в приложении необходимо нажать на иконку "Профиль" , ввести своё имя, после авторизированный получает возможности: 
	1. Игры на рейтинг
	2. Сохранения последней активности:
		1.2. Сыгранные матчи
		2.2. Лучшие матчи
			2.2.1 По меньшему количеству ходов 
			2.2.2 По лучшему времени матча
2. Для ознакомления с правилами логической игры необходимо нажать на кнопку "Правила", где содержится информация :
	3.1. Ключевые позиции
	3.2. Возможности выигрыша
3. Чтобы вступить в игру с компьютером предварительно выбрав уровень сложности, необходимол нажать на "Игра с компьютером":
	4.1. Легкий уровень сложности. Компьютер оказывает слабое сопротивление
	За победу над компьютером в легком режиме сложности пользователь получает "+2" к рейтингу, а за проигрыш "-1"
	4.2. Средний уровень сложности. Компьютер играет на равных, просчитывая ходы, выбирая не всегда наилучший
	За победу над компьютером в среднем режиме сложности пользователь получает "+4" к рейтингу, а за проигрыш "-3"
	4.3. Сложный уровень. Компьютер просчитывает все ходы наперёд, делает оптимальный ход
	За победу над компьютером в сложном режиме пользователь получает "+6" к рейтингу, а за проигрыш "-5"
5. Возможность "Игра с другом":
	5.1. Каждый игрок ходит поочерёдно
	5.2. Подсказки отключены
6. В игре присутсвуют возможности отмены хода и подсказки, воспользоваться этими функциями можно во время игры с компьютером или другом
7. В зависимости от рейтинга авторизированный пользователь получает звание:
	6.1. 0-550 – «новичок»
	6.2. 550-1000 – «опытный»
	6.3. 1000-1500-«эксперт»
	6.4. 1500-2000-«мастер»

			                                      
					GitHub: 11qfour</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ExitMainButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAAAfdJREFUaEPdmOtOwlAQhHkSQUq4eUU0CLSoIO//SMezjU2mywgU6pblxxfix+oy
        HY40tEIIVwGVHqHSI1R6hEqPUOkRKj1CpUeoZKzSNGj0TJNQqenetEOZTkjanfxRzzYFlYhceR1EQhR8
        pFkc479rCZUIDXINjSxms6j5bJNQiUiQogF51M9fClQieRA4E/r5S4FKBBvp/mOQh9H4rItFJWLVCO44
        ZQ+ViNUZ0UHG/UHUfJZBJWJ5RnCPkM4XUfNZDZWIVSPC28u0FKTK5xSViGUjwiDplfb1u0nUfBahEsFG
        rD7JMYgwfZ5EzWcLqESsGxFm09fSzmP2UolUOSPfX+udF5Dfmyl3KnofQiUiQfBeSz+PyFsPZ+tm+T6P
        a/huKpEqjSRxmb6K8gK0O5VssYxr+G4qkbyR3z906BZlu9nsLK8ziN6HUIlUaaQu7gZDFWL/W1qgEqnS
        SB1s17ut7jsbBVQi1o3oEPfDUdR8FqESsWxEPsXLQW6j5rMaKhGrRiaPTypEtV1UIlaN6BDHnAuESsSi
        kc8sK4WQ/1p65hBUItaN9DrHnwuESsTqjJwLlYhVI+dCJaIbcf0FHTaSB4Kf9XxTUInoRjCI4OZLbOGv
        RgQ92xRUMqQZjZ5pEio9QqVHqPQIlR6h0iNUeoRKj1Dpj9D6AUn/ImVLMRjOAAAAAElFTkSuQmCC
</value>
  </data>
</root>